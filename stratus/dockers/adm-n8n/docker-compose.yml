##  ~ UbioZur - https://github.com/UbioZur ~  ##
---
services:
  adm-n8n:
    image: docker.n8n.io/n8nio/n8n:1.68.0
    container_name: adm-n8n
    hostname: adm-n8n
    security_opt:
      - no-new-privileges
    networks:
      - traefik
    volumes:
      # Synchronize timezone
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      # Persistent data folder
      - ./data:/home/node/.n8n
    environment:
      # Nocodb main domain name
      - N8N_DOMAIN=${N8N_DOMAIN}
      # Nocodb Public URL
      - N8N_URL=${N8N_URL}
      # Nocodb Secondary URL
      - N8N_URL2=${N8N_URL2}
      # Nocodb public url
      - N8N_HOST=${N8N_URL2}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${N8N_URL}/
      - N8N_PROXY_HOPS=1
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      # Traefik CORS Middleware
      - N8N_CORS_ORIGIN=${N8N_CORS_ORIGIN}
    labels:
      # ROUTER Enable traefik for reverse proxy
      - traefik.enable=true
      - traefik.http.routers.adm-n8n-r.rule=Host(`${N8N_URL2}`)
      - traefik.http.routers.adm-n8n-r.entrypoints=websecure
      - traefik.http.routers.adm-n8n-r.tls.certresolver=cloudflare
      - traefik.http.routers.adm-n8n-r.tls.domains[0].main=${N8N_DOMAIN}
      - traefik.http.routers.adm-n8n-r.tls.domains[0].sans=*.${N8N_DOMAIN}
      - traefik.http.routers.adm-n8n-r.service=adm-n8n-s
      - traefik.http.services.adm-n8n-s.loadbalancer.server.port=5678
      # Middlewares
      - traefik.http.routers.adm-n8n-r.middlewares=default-headers@file
      # Public Webhook
      - traefik.http.routers.adm-n8n-webhook-r.rule=Host(`${N8N_URL}`) && PathPrefix(`/webhook`)
      - traefik.http.routers.adm-n8n-webhook-r.entrypoints=websecure
      - traefik.http.routers.adm-n8n-webhook-r.tls.certresolver=cloudflare
      - traefik.http.routers.adm-n8n-webhook-r.tls.domains[0].main=${N8N_URL}
      - traefik.http.routers.adm-n8n-webhook-r.service=adm-n8n-s
      # Webhook CORS Middleware
      - "traefik.http.middlewares.adm-n8n-cors.headers.accessControlAllowOrigin=${N8N_CORS_ORIGIN}"
      - "traefik.http.middlewares.adm-n8n-cors.headers.accessControlAllowMethods=GET, POST, OPTIONS"
      - "traefik.http.middlewares.adm-n8n-cors.headers.accessControlAllowHeaders=Content-Type"
      - "traefik.http.middlewares.adm-n8n-cors.headers.accessControlAllowCredentials=true"
      - "traefik.http.middlewares.adm-n8n-cors.headers.accessControlMaxAge=3600"
      - traefik.http.routers.adm-n8n-webhook-r.middlewares=default-headers@file,adm-n8n-cors
      # Test Webhook
      - traefik.http.routers.adm-n8n-webhooktest-r.rule=Host(`${N8N_URL}`) && PathPrefix(`/webhook-test`)
      - traefik.http.routers.adm-n8n-webhooktest-r.entrypoints=websecure
      - traefik.http.routers.adm-n8n-webhooktest-r.tls.certresolver=cloudflare
      - traefik.http.routers.adm-n8n-webhooktest-r.tls.domains[0].main=${N8N_URL}
      - traefik.http.routers.adm-n8n-webhooktest-r.service=adm-n8n-s
      # Webhook CORS Middleware (Also allow local development)
      - "traefik.http.middlewares.adm-n8n-corstest.headers.accessControlAllowOrigin=${N8N_CORS_ORIGIN}, http://localhost:1313"
      - "traefik.http.middlewares.adm-n8n-corstest.headers.accessControlAllowMethods=GET, POST, OPTIONS"
      - "traefik.http.middlewares.adm-n8n-corstest.headers.accessControlAllowHeaders=Content-Type"
      - "traefik.http.middlewares.adm-n8n-corstest.headers.accessControlAllowCredentials=true"
      - "traefik.http.middlewares.adm-n8n-corstest.headers.accessControlMaxAge=3600"
      - traefik.http.routers.adm-n8n-webhooktest-r.middlewares=default-headers@file,adm-n8n-corstest
    restart: unless-stopped
networks:
  # traefik network to link the containers together with outside internet access
  traefik:
    external: true
